type Query {
    "Lista de los estudiantes"
    students: [Student!]!,
    "Información de un estudiante"
    student(id: ID!): Student,
    "Lista de los cursos"
    courses: [Course!]!,
    "Información de un curso"
    course(id: ID!): Course
}

type Mutation {
    "Añadir un curso"
    addCourse(course: CourseInput!): Course!
    "Editar un curso"
    editCourse(course: CourseInput!): Course!
    "Eliminar un curso"
    deleteCourse(id: ID!): Course!
}

"Input para mutations del curso"
input CourseInput {
    id: ID,
    title: String!,
    description: String!,
    clases: Int!,
    time: Float!,
    level: Level = ALL,
    logo: String!,
    path: String!,
    teacher: String!
}

"Información de los estudiantes"
type Student {
    id: ID!,
    name: String!,
    email: String!,
    website: String,
    courses: [Course!]!
}

"Información de cursos"
type Course {
    id: ID!,
    title: String!,
    description: String!,
    clases: Int!,
    time: Float!,
    level: Level!,
    logo: String!,
    path: String!,
    teacher: String!,
    students: [Student],
    reviews: [Review!]!
}

"Opiniones sobre el curso"
type Review {
    id: ID!,
    name: String!,
    points: Float!,
    comment: String
}

"Nivel del curso"
enum Level {
    ALL
    NOVICE
    MEDIUM
    EXPERT
}